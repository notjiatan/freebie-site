---
/**
 * Homepage Table of Contents Component
 *
 * A sticky navigation TOC that only appears on the homepage
 * Provides quick navigation to homepage sections
 */

// Homepage sections
const sections = [
  { id: 'proof-testimonials', name: 'Proof & Testimonials' },
  { id: 'featured-services', name: 'Featured Services' },
  { id: 'how-it-works', name: 'How It Works' },
  { id: 'what-we-offer', name: 'Services Provided To You' },
  { id: 'tiers', name: 'Tiers' },
  { id: 'our-stats', name: 'Our Stats' },
];
---

<!-- Homepage Table of Contents (only visible on homepage) -->
<div id="homepage-toc-container" class="homepage-toc-container hidden">
  <button id="homepage-toc-toggle" class="toc-button">
    <span id="homepage-current-section" class="text-sm font-semibold">Freebie Finders</span>
    <svg class="w-4 h-4 ml-2 transition-transform" id="homepage-toc-arrow" fill="currentColor" viewBox="0 0 20 20">
      <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"/>
    </svg>
  </button>

  <div id="homepage-toc-dropdown" class="toc-dropdown hidden">
    {sections.map((section) => (
      <a href={`#${section.id}`} class="toc-item" data-section={section.name}>
        {section.name}
      </a>
    ))}
  </div>
</div>

<style>
  /* Sticky positioned TOC */
  .homepage-toc-container {
    position: fixed;
    top: 80px;
    left: 50%;
    transform: translateX(-50%);
    z-index: 1000;
  }

  /* Toggle button */
  .toc-button {
    display: flex;
    align-items: center;
    padding: 0.5rem 1rem;
    background: rgba(20, 20, 30, 0.85);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.15);
    border-radius: 8px;
    color: white;
    cursor: pointer;
    transition: all 0.2s ease;
    white-space: nowrap;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    position: relative;
    z-index: 100;
  }

  .toc-button:hover {
    background: rgba(30, 30, 40, 0.9);
    border-color: rgba(255, 255, 255, 0.25);
    box-shadow: 0 6px 25px rgba(0, 0, 0, 0.4);
  }

  .toc-button.active svg {
    transform: rotate(180deg);
  }

  /* Dropdown menu */
  .toc-dropdown {
    position: absolute;
    top: calc(100% + 0.5rem);
    left: 50%;
    transform: translateX(-50%);
    background: rgba(20, 20, 30, 0.95);
    backdrop-filter: blur(12px);
    border: 1px solid rgba(255, 255, 255, 0.15);
    border-radius: 12px;
    padding: 0.5rem;
    min-width: 280px;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.4);
    z-index: 1001;
    pointer-events: auto;
    display: block;
  }

  .toc-dropdown.hidden {
    display: none;
  }

  /* Dropdown items */
  .toc-item {
    display: block;
    padding: 0.75rem 1rem;
    color: rgba(255, 255, 255, 0.8);
    text-decoration: none;
    border-radius: 8px;
    transition: all 0.2s ease;
    font-size: 0.9rem;
  }

  .toc-item:hover {
    background: rgba(255, 255, 255, 0.1);
    color: white;
  }

  .toc-item.active {
    background: rgba(255, 255, 255, 0.08);
    color: white;
    font-weight: 600;
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .homepage-toc-container {
      top: 90px;
      padding: 0 1rem;
    }

    .toc-button {
      padding: 0.5rem 1rem;
      font-size: 0.85rem;
    }

    .toc-dropdown {
      min-width: 240px;
    }
  }
</style>

<script define:vars={{ sections }}>
  /**
   * Initialize Homepage Table of Contents
   * Only shows on homepage, tracks scroll position and highlights active section
   */
  function initHomepageTOC() {
    const tocContainer = document.getElementById('homepage-toc-container');
    const tocToggle = document.getElementById('homepage-toc-toggle');
    const tocDropdown = document.getElementById('homepage-toc-dropdown');
    const currentSection = document.getElementById('homepage-current-section');
    const tocItems = document.querySelectorAll('#homepage-toc-dropdown .toc-item');

    if (!tocContainer || !tocToggle || !tocDropdown || !currentSection) {
      console.log('TOC elements not found');
      return;
    }

    // Only show on homepage
    const isHomePage = window.location.pathname === '/' || window.location.pathname === '/index.html';
    if (!isHomePage) return;

    tocContainer.classList.remove('hidden');

    // Remove any existing click listeners by cloning and replacing
    const newToggle = tocToggle.cloneNode(true);
    tocToggle.parentNode.replaceChild(newToggle, tocToggle);

    // Toggle dropdown
    newToggle.addEventListener('click', (e) => {
      e.preventDefault();
      e.stopPropagation();

      const dropdown = document.getElementById('homepage-toc-dropdown');
      const isHidden = dropdown.classList.contains('hidden');
      console.log('TOC clicked, isHidden:', isHidden);

      if (isHidden) {
        dropdown.classList.remove('hidden');
        newToggle.classList.add('active');
      } else {
        dropdown.classList.add('hidden');
        newToggle.classList.remove('active');
      }
    });

    // Close when clicking outside
    document.addEventListener('click', (e) => {
      const container = document.getElementById('homepage-toc-container');
      const dropdown = document.getElementById('homepage-toc-dropdown');
      const toggle = document.getElementById('homepage-toc-toggle');

      if (container && !container.contains(e.target)) {
        dropdown?.classList.add('hidden');
        toggle?.classList.remove('active');
      }
    });

    // Handle section navigation
    tocItems.forEach(item => {
      item.addEventListener('click', (e) => {
        e.preventDefault();

        const href = item.getAttribute('href');
        if (href && href.startsWith('#')) {
          const targetId = href.substring(1);
          const targetSection = document.getElementById(targetId);

          if (targetSection) {
            targetSection.scrollIntoView({
              behavior: 'smooth',
              block: 'start'
            });
          }
        }

        const dropdown = document.getElementById('homepage-toc-dropdown');
        const toggle = document.getElementById('homepage-toc-toggle');
        dropdown?.classList.add('hidden');
        toggle?.classList.remove('active');
      });
    });

    // Update active section on scroll
    function updateActiveSection() {
      const scrollPos = window.scrollY + window.innerHeight / 3;
      const currentSectionEl = document.getElementById('homepage-current-section');
      const items = document.querySelectorAll('#homepage-toc-dropdown .toc-item');

      for (let i = sections.length - 1; i >= 0; i--) {
        const section = document.getElementById(sections[i].id);
        if (section && section.offsetTop <= scrollPos) {
          if (currentSectionEl) {
            currentSectionEl.textContent = sections[i].name;
          }

          items.forEach(item => {
            if (item.getAttribute('data-section') === sections[i].name) {
              item.classList.add('active');
            } else {
              item.classList.remove('active');
            }
          });

          break;
        }
      }
    }

    // Throttled scroll listener
    let ticking = false;
    window.addEventListener('scroll', () => {
      if (!ticking) {
        window.requestAnimationFrame(() => {
          updateActiveSection();
          ticking = false;
        });
        ticking = true;
      }
    });

    updateActiveSection();
  }

  // Initialize immediately and on events
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initHomepageTOC);
  } else {
    initHomepageTOC();
  }
  document.addEventListener('astro:page-load', initHomepageTOC);
</script>
